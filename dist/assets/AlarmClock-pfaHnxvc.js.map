{"version":3,"file":"AlarmClock-pfaHnxvc.js","sources":["../../src/components/AlarmClock.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Share2, Plus, Maximize2, Minimize2, ZoomIn, ZoomOut, X } from 'lucide-react';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router-dom';\n\ninterface Alarm {\n  id: string;\n  time: string;\n  label: string;\n  isActive: boolean;\n  sound: string;\n  repeat: boolean;\n  days: string[]; // New: days of week (e.g., ['Mon', 'Tue'])\n}\n\nconst AlarmClock: React.FC = () => {\n  const location = useLocation();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [fontSize, setFontSize] = useState(144);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [showShare, setShowShare] = useState(false);\n  const shareRef = useRef<HTMLDivElement>(null);\n  const [alarms, setAlarms] = useState<Alarm[]>([]);\n  const [showAlarmModal, setShowAlarmModal] = useState(false);\n  const [customTime, setCustomTime] = useState('');\n  const [alarmLabel, setAlarmLabel] = useState('');\n  const [activeAlarm, setActiveAlarm] = useState<Alarm | null>(null);\n  const [alarmHour, setAlarmHour] = useState(11);\n  const [alarmMinute, setAlarmMinute] = useState(24);\n  const [alarmAMPM, setAlarmAMPM] = useState('AM');\n  const [alarmSound, setAlarmSound] = useState('Bells');\n  const [alarmRepeat, setAlarmRepeat] = useState(true);\n  const [audioError, setAudioError] = useState<string | null>(null);\n  // Add this state at the top of the component\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [alarmDays, setAlarmDays] = useState<string[]>(['Mon','Tue','Wed','Thu','Fri','Sat','Sun']);\n\n  // Add this ref at the top of the component\n  const audioRef = React.useRef<HTMLAudioElement | null>(null);\n\n  // Persistent AudioContext for the whole component\n  const audioContextRef = useRef<AudioContext | null>(null);\n\n  useEffect(() => {\n    if (typeof window !== 'undefined' && (window.AudioContext || (window as any).webkitAudioContext)) {\n      audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n    }\n    const resumeAudioContext = () => {\n      if (audioContextRef.current && audioContextRef.current.state === 'suspended') {\n        audioContextRef.current.resume();\n      }\n    };\n    window.addEventListener('click', resumeAudioContext, { once: true });\n    return () => {\n      window.removeEventListener('click', resumeAudioContext);\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n        audioContextRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => document.removeEventListener('fullscreenchange', handleFullscreenChange);\n  }, []);\n\n  // Hide share dropdown when clicking outside\n  useEffect(() => {\n    if (!showShare) return;\n    function handleClick(e: MouseEvent) {\n      if (shareRef.current && !shareRef.current.contains(e.target as Node)) {\n        setShowShare(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClick);\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [showShare]);\n\n  // Load alarms from localStorage\n  useEffect(() => {\n    const savedAlarms = localStorage.getItem('vclock-alarms');\n    if (savedAlarms) {\n      let loaded = JSON.parse(savedAlarms);\n      // Migrate: if no days, set all days\n      loaded = loaded.map((a: any) => ({ ...a, days: a.days || ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'] }));\n      setAlarms(loaded);\n    }\n  }, []);\n\n  // Save alarms to localStorage\n  useEffect(() => {\n    localStorage.setItem('vclock-alarms', JSON.stringify(alarms));\n  }, [alarms]);\n\n  // Check for alarm triggers\n  useEffect(() => {\n    const checkAlarms = () => {\n      const now = new Date();\n      const currentTimeString = now.toLocaleTimeString('en-US', {\n        hour12: true,\n        hour: 'numeric',\n        minute: '2-digit'\n      });\n      const today = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"][now.getDay()];\n\n      alarms.forEach(alarm => {\n        if (alarm.isActive && alarm.time === currentTimeString && alarm.days.includes(today)) {\n          triggerAlarm(alarm);\n        }\n      });\n    };\n\n    const interval = setInterval(checkAlarms, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]);\n\n  // Add this utility function at the top or near the dropdown\n  const soundFiles = [\n    \"Alarm_Clock_Bell.mp3\",\n    \"Alarm_Clock.mp3\",\n    \"Alarm_Fairee_Soiree.mp3\",\n    \"Alarm_In_Camp.mp3\",\n    \"Alarm_Soft.mp3\",\n    \"Alarm_Tone.mp3\",\n    \"Alarm.mp3\",\n    \"Alarming.mp3\",\n    \"Bach_Cello_Courante.mp3\",\n    \"Beautiful_Piano.mp3\",\n    \"Buzzer_Alarm_Clock_2.mp3\",\n    \"Car_Alarm.mp3\",\n    \"Cherry.mp3\",\n    \"Classic_Alarm_Lg_78.mp3\",\n    \"Classic_Alarm.mp3\",\n    \"Classic_Bell.mp3\",\n    \"Classicalarm.mp3\",\n    \"Clock_Alert.mp3\",\n    \"Cr7_Bom_Dia_Br.mp3\",\n    \"Daybreak_Iphone_Alarm.mp3\",\n    \"Dxd_Help_Me_Doctor.mp3\",\n    \"Dxd_Morning_Wood.mp3\",\n    \"Esser_Feueralarm.mp3\",\n    \"File.mp3\",\n    \"Fresh_Start_Pixel.mp3\",\n    \"Funny_Car_Alarm.mp3\",\n    \"Get_Up_And_Don_T_Tur.mp3\",\n    \"Goodmorning_Alarm.mp3\",\n    \"Har_Du_Vaknat.mp3\",\n    \"Hop_Da_Electro.mp3\",\n    \"Htc_Progressive.mp3\",\n    \"Iphone_Alarm_Sound.mp3\",\n    \"Kamen_Rider.mp3\",\n    \"Kanye_West_Alarm.mp3\",\n    \"La_Cucaracha.mp3\",\n    \"Love_Connects_Alarm.mp3\",\n    \"Lumia_Clock_Bells.mp3\",\n    \"Mornig_Alarm_Piano.mp3\",\n    \"Morning_Alarm.mp3\",\n    \"Morning_Alarm_1.mp3\",\n    \"Morning_Alarm_2.mp3\",\n    \"Morning_Alert_Clock.mp3\",\n    \"Motivation.mp3\",\n    \"Multo_Cup_Of_Joe.mp3\",\n    \"New_Lumia_Alarm.mp3\",\n    \"Nice_Morning_Alarm.mp3\",\n    \"Otter_Me_Alarm.mp3\",\n    \"Polish_Army_Alarm.mp3\",\n    \"Predator_Alarm.mp3\",\n    \"Rain_Dance.mp3\",\n    \"Romantic.mp3\",\n    \"Seiya_Levantate.mp3\",\n    \"Sica_Sweet_Delight.mp3\",\n    \"Soft_Piano_Alarm.mp3\",\n    \"Standart.mp3\",\n    \"Transiberian_Orchestra.mp3\",\n    \"Violin.mp3\",\n    \"Wake_Up_Alarm.mp3\",\n    \"Wake_Up_Sid.mp3\",\n    \"Xperia_Seasons_Alarm.mp3\"\n  ];\n\n  function getDisplayName(fileName: string) {\n    return fileName\n      .replace('.mp3', '')\n      .replace(/_/g, ' ')\n      .replace(/\\b\\w/g, c => c.toUpperCase());\n  }\n\n  // Helper to format time string for alarm\n  const getAlarmTimeString = () => {\n    const hour = alarmHour;\n    const minute = alarmMinute.toString().padStart(2, '0');\n    return `${hour}:${minute} ${alarmAMPM}`;\n  };\n\n  // Helper to format custom time input\n  const formatCustomTime = (timeInput: string): string | null => {\n    // Remove extra spaces and convert to lowercase\n    const cleanInput = timeInput.trim().toLowerCase();\n    \n    // Pattern 1: \"7:30 AM\" or \"7:30am\"\n    const pattern1 = /^(\\d{1,2}):(\\d{2})\\s*(am|pm)$/;\n    const match1 = cleanInput.match(pattern1);\n    if (match1) {\n      const hour = parseInt(match1[1]);\n      const minute = match1[2];\n      const ampm = match1[3].toUpperCase();\n      return `${hour}:${minute} ${ampm}`;\n    }\n    \n    // Pattern 2: \"14:30\" (24-hour format)\n    const pattern2 = /^(\\d{1,2}):(\\d{2})$/;\n    const match2 = cleanInput.match(pattern2);\n    if (match2) {\n      const hour = parseInt(match2[1]);\n      const minute = match2[2];\n      if (hour >= 0 && hour <= 23 && parseInt(minute) >= 0 && parseInt(minute) <= 59) {\n        if (hour === 0) return `12:${minute} AM`;\n        if (hour === 12) return `12:${minute} PM`;\n        if (hour > 12) return `${hour - 12}:${minute} PM`;\n        return `${hour}:${minute} AM`;\n      }\n    }\n    \n    // Pattern 3: \"730am\" or \"7:30am\" (no space)\n    const pattern3 = /^(\\d{1,2}):?(\\d{2})(am|pm)$/;\n    const match3 = cleanInput.match(pattern3);\n    if (match3) {\n      const hour = parseInt(match3[1]);\n      const minute = match3[2];\n      const ampm = match3[3].toUpperCase();\n      return `${hour}:${minute} ${ampm}`;\n    }\n    \n    return null; // Invalid format\n  };\n\n  const triggerAlarm = (alarm: Alarm) => {\n    setActiveAlarm(alarm);\n    playSound(alarm.sound, alarm.repeat);\n    if (Notification.permission === 'granted') {\n      new Notification('Alarm', {\n        body: `${alarm.label} - ${alarm.time}`,\n        icon: '/vite.svg'\n      });\n    }\n  };\n\n  // Update formatTime to return the time with AM/PM inline\n  const formatTime = (date: Date) => {\n    const full = date.toLocaleTimeString('en-US', {\n      hour12: true,\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n    const [time, ampm] = full.split(' ');\n    return `${time.replace(/^0/, '')} ${ampm}`;\n  };\n\n  // Add a function to get AM/PM\n  const getAMPM = (date: Date) => {\n    return date.toLocaleTimeString('en-US', { hour12: true }).split(' ')[1];\n  };\n\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).toUpperCase();\n  };\n\n  const increaseFontSize = () => {\n    setFontSize(prev => Math.min(prev + 16, 256));\n  };\n\n  const decreaseFontSize = () => {\n    setFontSize(prev => Math.max(prev - 16, 64));\n  };\n\n  const toggleFullscreen = async () => {\n    try {\n      if (!document.fullscreenElement) {\n        const clockElement = document.getElementById('clock-display');\n        if (clockElement) {\n          await clockElement.requestFullscreen();\n        }\n      } else {\n        await document.exitFullscreen();\n      }\n    } catch (error) {\n      // Optionally, show a user-facing error if needed\n    }\n  };\n\n  const openAlarmModal = () => {\n    setShowAlarmModal(true);\n    setCustomTime('');\n    setAlarmLabel('');\n    setAlarmDays(['Mon','Tue','Wed','Thu','Fri','Sat','Sun']); // Reset days\n    // Request notification permission\n    if (Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n  };\n\n  const addAlarm = () => {\n    // Priority: custom time > selected time > picker time\n    let timeToUse = '';\n    \n    if (customTime.trim()) {\n      // Validate and format custom time\n      const formattedTime = formatCustomTime(customTime.trim());\n      if (formattedTime) {\n        timeToUse = formattedTime;\n      } else {\n        alert('Please enter a valid time format (e.g., 7:30 AM, 14:30, 7:30am)');\n        return;\n      }\n    } else if (selectedTime) {\n      timeToUse = selectedTime;\n    } else {\n      timeToUse = getAlarmTimeString();\n    }\n    \n    if (!timeToUse) return;\n\n    const newAlarm: Alarm = {\n      id: Date.now().toString(),\n      time: timeToUse,\n      label: alarmLabel || `Alarm ${timeToUse}`,\n      isActive: true,\n      sound: alarmSound,\n      repeat: alarmRepeat,\n      days: alarmDays.length ? alarmDays : [\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"],\n    };\n\n    setAlarms(prev => [...prev, newAlarm]);\n    setShowAlarmModal(false);\n    setSelectedTime('');\n    setCustomTime('');\n    setAlarmLabel('');\n  };\n\n  // Play sound helper\n  const playSound = (sound: string, repeat: boolean) => {\n    setAudioError(null);\n    // Stop any currently playing sound\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current = null;\n      setIsPlaying(false);\n    }\n    const src = `/sounds/${sound}`;\n    try {\n      const audio = new Audio(src);\n      audioRef.current = audio;\n      audio.volume = 1.0;\n      audio.muted = false;\n      audio.play().then(() => {\n        setIsPlaying(true);\n      }).catch((e) => {\n        setAudioError('Audio play error: ' + e.message);\n        setIsPlaying(false);\n      });\n      audio.addEventListener('ended', () => {\n        setIsPlaying(false);\n        if (repeat) {\n          playSound(sound, repeat);\n        }\n      }, { once: true });\n    } catch (err: any) {\n      setAudioError('Audio object error: ' + err.message);\n      setIsPlaying(false);\n    }\n  };\n\n  // Test button handler\n  const handleTestSound = () => {\n    if (isPlaying) {\n      stopSound();\n    } else {\n      playSound(alarmSound, alarmRepeat);\n    }\n  };\n\n  const toggleAlarm = (id: string) => {\n    setAlarms(prev => prev.map(alarm => \n      alarm.id === id ? { ...alarm, isActive: !alarm.isActive } : alarm\n    ));\n  };\n\n  const deleteAlarm = (id: string) => {\n    setAlarms(prev => prev.filter(alarm => alarm.id !== id));\n  };\n\n  const dismissActiveAlarm = () => {\n    setActiveAlarm(null);\n  };\n\n  const timeSlots = [\n    '4:00 AM', '4:30 AM', '5:30 AM', '5:45 AM',\n    '5:00 AM', '5:15 AM', '6:30 AM', '6:45 AM',\n    '6:00 AM', '6:15 AM', '7:30 AM', '7:45 AM',\n    '7:00 AM', '7:15 AM', '8:30 AM', '8:45 AM',\n    '8:00 AM', '8:15 AM', '9:00 AM', '10:00 AM',\n    '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM'\n  ];\n\n  const recentlyUsed = [\n    { label: 'Alarm 6:00 AM', time: '6:00 AM' },\n    { label: 'Alarm 7:00 AM', time: '7:00 AM' },\n    { label: 'Alarm 8:00 AM', time: '8:00 AM' },\n    { label: 'Alarm 9:00 AM', time: '9:00 AM' },\n    { label: 'Alarm 10:00 AM', time: '10:00 AM' },\n    { label: 'Alarm 12:00 PM', time: '12:00 PM' },\n    { label: 'Alarm 1:00 PM', time: '1:00 PM' },\n    { label: 'Alarm 2:00 PM', time: '2:00 PM' },\n    { label: 'Alarm 5:00 PM', time: '5:00 PM' },\n    { label: 'Alarm 6:00 PM', time: '6:00 PM' }\n  ];\n\n  // Add this function inside the component\n  const stopSound = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      audioRef.current = null;\n      setIsPlaying(false);\n    }\n  };\n\n  // Helper for weekday names\n  const WEEKDAYS = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n\n  return (\n    <>\n      <Helmet>\n        <title>VClock | Online Alarm Clock for Free</title>\n        <meta name=\"description\" content=\"Set alarms quickly with VClock, the free online alarm clock you can use anytime, anywhere. No downloads or installations needed stay on schedule with ease.\" />\n        <link rel=\"canonical\" href={location.pathname === '/' ? \"https://vclock.app/\" : \"https://vclock.app/alarm\"} />\n        <meta name=\"robots\" content=\"index, follow\" />\n        <meta property=\"og:title\" content=\"VClock | Online Alarm Clock for Free\" />\n        <meta property=\"og:description\" content=\"Set alarms quickly with VClock, the free online alarm clock you can use anytime, anywhere. No downloads or installations needed stay on schedule with ease.\" />\n        <meta property=\"og:url\" content={location.pathname === '/' ? \"https://vclock.app/\" : \"https://vclock.app/alarm\"} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content=\"VClock | Online Alarm Clock for Free\" />\n        <meta name=\"twitter:description\" content=\"Set alarms quickly with VClock, the free online alarm clock you can use anytime, anywhere. No downloads or installations needed stay on schedule with ease.\" />\n        <meta name=\"keywords\" content=\"alarm clock, online alarm, set alarm, wake up, productivity, reminders, vclock, digital alarm, free alarm app, loud alarm, custom alarm\" />\n      </Helmet>\n      {/* Active Alarm Notification */}\n      {activeAlarm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4 text-center\">\n            <div className=\"text-6xl mb-4\">⏰</div>\n            <h2 className=\"text-2xl font-bold mb-2\">Alarm</h2>\n            <p className=\"text-lg mb-2\">{activeAlarm.label}</p>\n            <p className=\"text-xl font-mono mb-6\">{activeAlarm.time}</p>\n            <button\n              onClick={dismissActiveAlarm}\n              className=\"bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-medium\"\n            >\n              Dismiss\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Alarm Modal */}\n      {showAlarmModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-40 p-4\">\n          <div className=\"bg-white dark:bg-black rounded-2xl shadow-2xl max-w-xl w-full mx-4 overflow-hidden border border-gray-200 dark:border-gray-700 max-h-[90vh] overflow-y-auto\">\n            {/* Header */}\n            <div className=\"px-6 py-4 relative overflow-hidden\" style={{ background: 'linear-gradient(90deg, #0090DD 60%, #00C6FB 100%)' }}>\n              <div className=\"absolute inset-0 bg-black bg-opacity-10\"></div>\n              <div className=\"relative flex justify-between items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-white text-2xl\">⏰</span>\n                  <h2 className=\"text-xl font-semibold text-white\">Set Alarm</h2>\n                </div>\n                <button\n                  onClick={() => setShowAlarmModal(false)}\n                  className=\"text-white hover:text-blue-100 transition-colors p-2 rounded-full hover:bg-white hover:bg-opacity-20\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n            {/* Body */}\n            <div className=\"p-6 space-y-4 bg-white dark:bg-black\">\n              {/* Time Preview */}\n              <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\">\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-1\">Alarm will be set for:</p>\n                <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n                  {customTime.trim() ? formatCustomTime(customTime.trim()) || 'Invalid time' : (selectedTime || getAlarmTimeString())}\n                </p>\n              </div>\n              \n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                {/* Hours Picker */}\n                <div>\n                  <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-2 uppercase tracking-wide\">Hours</label>\n                  <div className=\"flex items-center justify-center space-x-1\">\n                    <button onClick={() => setAlarmHour(h => h === 1 ? 12 : h - 1)} className=\"w-8 h-8 rounded-full bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-600 dark:hover:to-gray-500 flex items-center justify-center text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white transition-all shadow-sm hover:shadow-md\"><span className=\"text-sm font-bold\">−</span></button>\n                    <div className=\"w-12 h-10 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900 dark:to-blue-800 rounded-lg flex items-center justify-center border border-blue-200 dark:border-blue-700 shadow-sm\">\n                      <span className=\"text-lg font-bold text-gray-800 dark:text-white\">{alarmHour.toString().padStart(2, '0')}</span>\n                    </div>\n                    <button onClick={() => setAlarmHour(h => h === 12 ? 1 : h + 1)} className=\"w-8 h-8 rounded-full bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-600 dark:hover:to-gray-500 flex items-center justify-center text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white transition-all shadow-sm hover:shadow-md\"><span className=\"text-sm font-bold\">+</span></button>\n                  </div>\n                </div>\n                {/* Minutes Picker */}\n                <div>\n                  <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-2 uppercase tracking-wide\">Minutes</label>\n                  <div className=\"flex items-center justify-center space-x-1\">\n                    <button onClick={() => setAlarmMinute(m => m === 0 ? 59 : m - 1)} className=\"w-8 h-8 rounded-full bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-600 dark:hover:to-gray-500 flex items-center justify-center text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white transition-all shadow-sm hover:shadow-md\"><span className=\"text-sm font-bold\">−</span></button>\n                    <div className=\"w-12 h-10 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900 dark:to-blue-800 rounded-lg flex items-center justify-center border border-blue-200 dark:border-blue-700 shadow-sm\">\n                      <span className=\"text-lg font-bold text-gray-800 dark:text-white\">{alarmMinute.toString().padStart(2, '0')}</span>\n                    </div>\n                    <button onClick={() => setAlarmMinute(m => m === 59 ? 0 : m + 1)} className=\"w-8 h-8 rounded-full bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-600 dark:hover:to-gray-500 flex items-center justify-center text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-white transition-all shadow-sm hover:shadow-md\"><span className=\"text-sm font-bold\">+</span></button>\n                  </div>\n                </div>\n              </div>\n              {/* AM/PM Picker */}\n              <div className=\"flex items-center justify-center gap-4\">\n                <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1 uppercase tracking-wide\">AM/PM</label>\n                <select value={alarmAMPM} onChange={e => setAlarmAMPM(e.target.value)} className=\"w-24 px-3 py-2 border border-gray-200 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm transition-all bg-white dark:bg-gray-800 text-gray-800 dark:text-white\">\n                  <option>AM</option>\n                  <option>PM</option>\n                </select>\n              </div>\n              {/* Sound and Repeat */}\n              <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4 sm:gap-6\">\n                <div className=\"w-full sm:flex-1 flex items-center border border-gray-200 dark:border-gray-600 rounded-lg overflow-hidden bg-white dark:bg-gray-800 h-10 sm:h-12\">\n                  <select value={alarmSound} onChange={e => setAlarmSound(e.target.value)} className=\"flex-1 h-full px-2 sm:px-4 text-sm sm:text-base font-normal border-0 focus:ring-2 focus:ring-blue-400 focus:outline-none appearance-none bg-white dark:bg-gray-800\">\n                    {soundFiles.map(file => (\n                      <option key={file} value={file}>\n                        {getDisplayName(file)}\n                      </option>\n                    ))}\n                  </select>\n                  <button onClick={handleTestSound} className=\"w-10 sm:w-12 h-full flex items-center justify-center text-sm sm:text-lg text-gray-500 bg-gray-100 hover:bg-gray-200 border-l border-gray-200 dark:border-gray-600\" title={isPlaying ? 'Stop Sound' : 'Play Sound'}>\n                    {isPlaying ? (\n                      // Stop icon\n                      <svg width=\"16\" height=\"16\" className=\"sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><rect x=\"4\" y=\"4\" width=\"8\" height=\"8\" /></svg>\n                    ) : (\n                      // Play icon\n                      <svg width=\"16\" height=\"16\" className=\"sm:w-5 sm:h-5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polygon points=\"5 3 19 12 5 21 5 3\" /></svg>\n                    )}\n                  </button>\n                </div>\n                {audioError && (\n                  <div className=\"text-red-600 text-sm mt-2\">{audioError}</div>\n                )}\n                <div className=\"flex items-center w-full sm:w-auto\">\n                  <input type=\"checkbox\" id=\"repeatSound\" className=\"peer hidden\" checked={alarmRepeat} onChange={e => setAlarmRepeat(e.target.checked)} />\n                  <label htmlFor=\"repeatSound\" className=\"w-6 h-6 flex items-center justify-center border-2 border-blue-500 bg-white cursor-pointer mr-2\">\n                    {alarmRepeat && (\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"#0090DD\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"4 11 8 15 16 6\" /></svg>\n                    )}\n                  </label>\n                  <span className=\"text-gray-700 dark:text-gray-300 text-base font-normal select-none\">Repeat sound</span>\n                </div>\n              </div>\n              {/* Custom Time Input */}\n              <div>\n                <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1 uppercase tracking-wide\">Custom Time (Optional)</label>\n                <input\n                  type=\"text\"\n                  value={customTime}\n                  onChange={(e) => setCustomTime(e.target.value)}\n                  placeholder=\"e.g., 7:30 AM, 14:30\"\n                  className=\"w-full px-3 py-2 border border-gray-200 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm transition-all bg-white dark:bg-gray-800 text-gray-800 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                />\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                  Leave empty to use the time picker above\n                </p>\n              </div>\n              \n              {/* Title */}\n              <div>\n                <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1 uppercase tracking-wide\">Title</label>\n                <input\n                  type=\"text\"\n                  value={alarmLabel}\n                  onChange={(e) => setAlarmLabel(e.target.value)}\n                  placeholder=\"Alarm\"\n                  className=\"w-full px-3 py-2 border border-gray-200 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm transition-all bg-white dark:bg-gray-800 text-gray-800 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                />\n              </div>\n              {/* Days of Week */}\n              <div className=\"flex gap-2 flex-wrap mb-2\">\n                {[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"].map(day => (\n                  <label key={day} className=\"flex items-center gap-1 text-xs\">\n                    <input type=\"checkbox\" checked={alarmDays.includes(day)} onChange={e => {\n                      setAlarmDays(alarmDays => e.target.checked ? [...alarmDays, day] : alarmDays.filter(d => d !== day));\n                    }} />\n                    {day}\n                  </label>\n                ))}\n              </div>\n            </div>\n            {/* Footer */}\n            <div className=\"bg-gradient-to-r from-gray-50 to-blue-50 dark:from-gray-800 dark:to-blue-900 px-6 py-4 flex gap-3 border-t border-gray-100 dark:border-gray-700\">\n              <button\n                onClick={handleTestSound}\n                className=\"flex-1 py-3 px-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 font-medium hover:bg-gray-50 dark:hover:bg-gray-700 transition-all shadow-sm hover:shadow-md\"\n              >\n                Test\n              </button>\n              <button\n                onClick={() => { stopSound(); setShowAlarmModal(false); }}\n                className=\"flex-1 py-3 px-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 font-medium hover:bg-gray-50 dark:hover:bg-gray-700 transition-all shadow-sm hover:shadow-md\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={addAlarm}\n                disabled={false /* TODO: disable if invalid */}\n                className=\"flex-1 py-3 px-4 bg-gradient-to-r from-green-500 via-green-600 to-green-700 text-white font-medium rounded-lg hover:from-green-600 hover:via-green-700 hover:to-green-800 transition-all shadow-sm hover:shadow-lg transform hover:scale-105\"\n              >\n                Start\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Main Clock Display */}\n      <div \n        id=\"clock-display\"\n        className={\n          isFullscreen\n            ? 'fixed inset-0 z-50 flex flex-col justify-center items-center bg-black text-white border-0 text-center'\n            : 'bg-white dark:bg-black border-b border-gray-200 dark:border-gray-700 text-center relative p-2 sm:p-4 md:p-6 lg:p-8 xl:p-12'\n        }\n      >\n        <div className=\"absolute top-1 sm:top-2 md:top-4 right-1 sm:right-2 md:right-4 flex space-x-1\">\n          <button \n            onClick={decreaseFontSize}\n            className={`p-2 rounded transition-colors ${\n              isFullscreen \n                ? 'hover:bg-gray-800 text-white' \n                : 'hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-600 dark:text-gray-300'\n            }`}\n            title=\"Decrease font size\"\n          >\n            <ZoomOut className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" />\n          </button>\n          <button \n            onClick={increaseFontSize}\n            className={`p-2 rounded transition-colors ${\n              isFullscreen \n                ? 'hover:bg-gray-800 text-white' \n                : 'hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-600 dark:text-gray-300'\n            }`}\n            title=\"Increase font size\"\n          >\n            <ZoomIn className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" />\n          </button>\n          <div className=\"relative\" ref={shareRef}>\n            <button\n              className={`p-2 rounded transition-colors ${\n                isFullscreen \n                  ? 'hover:bg-gray-800 text-white'\n                  : 'hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-600 dark:text-gray-300'\n              }`}\n              title=\"Share\"\n              aria-label=\"Share\"\n              onClick={() => setShowShare(s => !s)}\n            >\n              <Share2 className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" />\n            </button>\n            {showShare && (\n              <>\n                {/* Caret Arrow */}\n                <div className=\"absolute right-4 sm:right-6 -top-2 z-50 hidden sm:block\">\n                  <svg width=\"24\" height=\"12\" viewBox=\"0 0 24 12\"><polygon points=\"12,0 24,12 0,12\" fill=\"#fff\" style={{filter:'drop-shadow(0 2px 4px rgba(0,0,0,0.08))'}} /></svg>\n                </div>\n                <div className=\"absolute right-0 sm:right-0 left-0 sm:left-auto mt-3 z-50 bg-white/90 dark:bg-gray-800/90 backdrop-blur-md border border-gray-200 dark:border-gray-600 rounded-2xl shadow-2xl p-3 sm:p-4 flex flex-col gap-2 sm:gap-3 min-w-[200px] sm:min-w-[220px] max-w-[280px] sm:max-w-none\" style={{boxShadow:'0 8px 32px 0 rgba(31,38,135,0.15)'}}>\n                  {/* Close Button */}\n                  <button onClick={()=>setShowShare(false)} className=\"absolute top-1 sm:top-2 right-1 sm:right-2 p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors\" aria-label=\"Close\"><X className=\"w-3 h-3 sm:w-4 sm:h-4\" /></button>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400 mb-1 pl-1 pr-4 sm:pr-6\">Share this page:</span>\n                  <div className=\"flex flex-wrap gap-1 sm:gap-2 md:gap-3 justify-center mt-1 mb-1 sm:mb-2\">\n                    <a href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-7 h-7 sm:w-8 sm:h-8 md:w-9 md:h-9 flex items-center justify-center rounded-full bg-[#1877f2] hover:bg-[#145db2] shadow text-white transition-transform hover:scale-110\" title=\"Share on Facebook\"><svg className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M22 12c0-5.522-4.477-10-10-10S2 6.478 2 12c0 5 3.657 9.127 8.438 9.877v-6.987h-2.54v-2.89h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.242 0-1.632.771-1.632 1.562v1.875h2.773l-.443 2.89h-2.33v6.987C18.343 21.127 22 17 22 12\"/></svg></a>\n                    <a href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(window.location.href)}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-7 h-7 sm:w-8 sm:h-8 md:w-9 md:h-9 flex items-center justify-center rounded-full bg-[#1da1f2] hover:bg-[#0d8ddb] shadow text-white transition-transform hover:scale-110\" title=\"Share on Twitter\"><svg className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M22.46 6c-.77.35-1.6.59-2.47.69a4.3 4.3 0 0 0 1.88-2.37 8.59 8.59 0 0 1-2.72 1.04A4.28 4.28 0 0 0 16.11 4c-2.37 0-4.29 1.92-4.29 4.29 0 .34.04.67.11.99C7.69 9.13 4.07 7.38 1.64 4.7c-.37.64-.58 1.38-.58 2.17 0 1.5.76 2.82 1.92 3.6-.71-.02-1.38-.22-1.97-.54v.05c0 2.1 1.5 3.85 3.5 4.25-.36.1-.74.16-1.13.16-.28 0-.54-.03-.8-.08.54 1.7 2.12 2.94 3.99 2.97A8.6 8.6 0 0 1 2 19.54a12.13 12.13 0 0 0 6.56 1.92c7.88 0 12.2-6.53 12.2-12.2 0-.19 0-.39-.01-.58A8.72 8.72 0 0 0 24 4.59a8.5 8.5 0 0 1-2.54.7z\"/></svg></a>\n                    <a href={`https://wa.me/?text=${encodeURIComponent(window.location.href)}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-7 h-7 sm:w-8 sm:h-8 md:w-9 md:h-9 flex items-center justify-center rounded-full bg-[#25d366] hover:bg-[#1da851] shadow text-white transition-transform hover:scale-110\" title=\"Share on WhatsApp\"><svg className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M20.52 3.48A11.93 11.93 0 0 0 12 0C5.37 0 0 5.37 0 12c0 2.11.55 4.16 1.6 5.97L0 24l6.18-1.62A11.93 11.93 0 0 0 12 24c6.63 0 12-5.37 12-12 0-3.19-1.24-6.19-3.48-8.52zM12 22c-1.85 0-3.68-.5-5.25-1.44l-.38-.22-3.67.96.98-3.58-.25-.37A9.94 9.94 0 0 1 2 12c0-5.52 4.48-10 10-10s10 4.48 10 10-4.48 10-10 10zm5.2-7.6c-.28-.14-1.65-.81-1.9-.9-.25-.09-.43-.14-.61.14-.18.28-.7.9-.86 1.08-.16.18-.32.2-.6.07-.28-.14-1.18-.44-2.25-1.4-.83-.74-1.39-1.65-1.55-1.93-.16-.28-.02-.43.12-.57.13-.13.28-.34.42-.51.14-.17.18-.29.28-.48.09-.19.05-.36-.02-.5-.07-.14-.61-1.47-.84-2.01-.22-.53-.45-.46-.62-.47-.16-.01-.35-.01-.54-.01-.19 0-.5.07-.76.34-.26.27-1 1-.97 2.43.03 1.43 1.03 2.81 1.18 3 .15.19 2.03 3.1 4.93 4.23.69.3 1.23.48 1.65.61.69.22 1.32.19 1.81.12.55-.08 1.65-.67 1.88-1.32.23-.65.23-1.2.16-1.32-.07-.12-.25-.19-.53-.33z\"/></svg></a>\n                    <a href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(window.location.href)}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-7 h-7 sm:w-8 sm:h-8 md:w-9 md:h-9 flex items-center justify-center rounded-full bg-[#0077b5] hover:bg-[#005983] shadow text-white transition-transform hover:scale-110\" title=\"Share on LinkedIn\"><svg className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M20.447 20.452h-3.554v-5.569c0-1.327-.027-3.037-1.849-3.037-1.851 0-2.132 1.445-2.132 2.939v5.667H9.358V9h3.414v1.561h.049c.476-.899 1.637-1.849 3.37-1.849 3.602 0 4.267 2.369 4.267 5.455v6.285zM5.337 7.433a2.062 2.062 0 1 1 0-4.124 2.062 2.062 0 0 1 0 4.124zm1.777 13.019H3.56V9h3.554v11.452zM22.225 0H1.771C.792 0 0 .771 0 1.723v20.549C0 23.229.792 24 1.771 24h20.451C23.2 24 24 23.229 24 22.271V1.723C24 .771 23.2 0 22.225 0z\"/></svg></a>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n          <button \n            onClick={toggleFullscreen}\n            className={`p-2 rounded transition-colors ${\n              isFullscreen \n                ? 'hover:bg-gray-800 text-white' \n                : 'hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-600 dark:text-gray-300'\n            }`}\n            title={isFullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n          >\n            {isFullscreen ? (\n              <Minimize2 className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" />\n            ) : (\n              <Maximize2 className=\"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5\" />\n            )}\n          </button>\n        </div>\n        \n        <div \n          className={`font-light mb-4 tracking-tight leading-none flex items-baseline justify-center font-nunito ${isFullscreen ? 'text-white' : 'text-black'}`}\n          style={{ \n            fontSize: `${Math.round(isFullscreen ? fontSize * 1.5 : Math.min(fontSize, window.innerWidth * 0.12))}px`,\n            fontWeight: 900,\n            color: isFullscreen ? '#fff' : '#555555',\n            letterSpacing: '0.04em',\n            textAlign: 'center',\n          }}\n        >\n          {/* Split time and AM/PM for styling */}\n          <span>{formatTime(currentTime).replace(/\\s?(AM|PM)$/i, '')}</span>\n          <span style={{ fontSize: '0.35em', marginLeft: '0.25em', fontWeight: 400, letterSpacing: '0.08em', verticalAlign: 'baseline' }}>\n            {formatTime(currentTime).match(/(AM|PM)$/i)?.[0]}\n          </span>\n        </div>\n        <div className={`tracking-wide font-medium font-bold mt-2 sm:mt-0 ${\n          isFullscreen \n            ? 'text-gray-300 text-xl sm:text-2xl md:text-3xl' \n            : 'text-gray-500 text-xs sm:text-sm md:text-base lg:text-xl'\n        } font-nunito`} style={{\n          color: '#555555',\n          letterSpacing: '0.18em',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n          fontWeight: 900,\n          fontSize: isFullscreen ? 'clamp(1.5rem, 5vw, 3rem)' : 'clamp(0.75rem, 3vw, 1.5rem)',\n        }}>\n          {formatDate(currentTime)}\n        </div>\n        \n        {!isFullscreen && (\n          <button \n            onClick={openAlarmModal}\n            className=\"mt-3 sm:mt-4 md:mt-6 bg-green-500 hover:bg-green-600 text-white px-3 sm:px-4 md:px-6 py-2 text-xs sm:text-sm md:text-base rounded-md font-medium transition-colors shadow-sm\"\n          >\n            Set Alarm\n          </button>\n        )}\n      </div>\n\n      {/* Active Alarms List */}\n      {!isFullscreen && alarms.length > 0 && (\n        <div className=\"p-2 sm:p-3 md:p-4 lg:p-6\">\n          <div className=\"bg-white dark:bg-black rounded-lg p-3 sm:p-4 md:p-6 border border-gray-200 dark:border-gray-700\">\n            <h2 className=\"text-sm sm:text-base md:text-lg font-medium text-gray-800 dark:text-white mb-2 sm:mb-3 md:mb-4\">Active Alarms</h2>\n            <div className=\"space-y-2 sm:space-y-3\">\n              {alarms.map((alarm) => (\n                <div key={alarm.id} className=\"flex items-center justify-between p-2 sm:p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                    <button\n                      onClick={() => toggleAlarm(alarm.id)}\n                      className={`w-8 sm:w-10 md:w-12 h-4 sm:h-5 md:h-6 rounded-full transition-colors ${\n                        alarm.isActive ? 'bg-green-500' : 'bg-gray-300'\n                      }`}\n                    >\n                      <div className={`w-3 sm:w-4 md:w-5 h-3 sm:h-4 md:h-5 bg-white rounded-full transition-transform ${\n                        alarm.isActive ? 'translate-x-4 sm:translate-x-5 md:translate-x-6' : 'translate-x-1'\n                      }`} />\n                    </button>\n                    <div>\n                      <div className=\"text-xs sm:text-sm md:text-base font-medium text-gray-800 dark:text-white\">{alarm.time}</div>\n                      <div className=\"text-xs text-gray-600 dark:text-gray-400\">{alarm.label}</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">{alarm.days.length === 7 ? 'Every day' : alarm.days.join(', ')}</div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => deleteAlarm(alarm.id)}\n                    className=\"text-red-500 hover:text-red-700 p-1\"\n                  >\n                    <X className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Alarm Settings Section */}\n      {!isFullscreen && (\n      <div className=\"p-2 sm:p-3 md:p-4 lg:p-6 grid grid-cols-1 lg:grid-cols-2 gap-3 sm:gap-4 md:gap-6\">\n        {/* Set Alarm Times */}\n        <div className=\"bg-white dark:bg-black rounded-lg p-3 sm:p-4 md:p-6 border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-sm sm:text-base md:text-lg font-medium text-gray-800 dark:text-white mb-2 sm:mb-3 md:mb-4\">\n            Set the alarm for the specified time\n          </h3>\n          \n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-1 sm:gap-2\">\n            {timeSlots.map((time, index) => (\n              <button\n                key={index}\n                onClick={() => {\n                  setSelectedTime(time);\n                  setShowAlarmModal(true);\n                }}\n                className=\"px-1 sm:px-2 md:px-3 py-1 sm:py-2 text-xs sm:text-sm rounded transition-colors bg-[#00A1F7] text-white hover:bg-[#0086c3]\"\n              >\n                {time}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Recently Used */}\n        <div className=\"bg-white dark:bg-black rounded-lg p-3 sm:p-4 md:p-6 border border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between mb-2 sm:mb-3 md:mb-4\">\n            <h2 className=\"text-sm sm:text-base md:text-lg font-medium text-gray-800 dark:text-white\">Recently used</h2>\n            <button className=\"w-11 h-11 flex items-center justify-center text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300\" aria-label=\"Show recently used menu\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div className=\"space-y-2\">\n            {recentlyUsed.map((alarm, index) => (\n              <div key={index} className=\"flex items-center justify-between py-1\">\n                <span \n                  className=\"text-blue-500 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 cursor-pointer text-xs sm:text-sm\"\n                  onClick={() => {\n                    setSelectedTime(alarm.time);\n                    setShowAlarmModal(true);\n                  }}\n                >\n                  {alarm.label}\n                </span>\n                <span className=\"text-gray-600 dark:text-gray-400 text-xs sm:text-sm\">{alarm.time}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      )}\n\n      {/* Instructions */}\n      {!isFullscreen && (\n      <div className=\"p-3 sm:p-4 md:p-6 bg-white dark:bg-black mx-2 sm:mx-3 md:mx-6 rounded-lg border border-gray-200 dark:border-gray-700\" style={{ marginBottom: '20px' }}>\n        <h2 className=\"text-sm sm:text-base md:text-lg font-medium text-gray-800 dark:text-white mb-2 sm:mb-3 md:mb-4\">\n          How to Use the Online Alarm Clock\n        </h2>\n        \n        <div className=\"space-y-2 sm:space-y-3 text-gray-600 dark:text-gray-300 text-xs sm:text-sm\">\n          <p>\n            Need a reliable alarm clock right in your browser? You’re in the perfect spot. Setting an alarm here is quick and easy—just pick your time, choose a sound, and add a label if you want. When your alarm goes off, you’ll see a message and hear your chosen sound, even if you’re working in another tab.\n          </p>\n          <ul className=\"list-disc pl-3 sm:pl-4 md:pl-6 space-y-1\">\n            <li><strong>Set your alarm:</strong> Select the hour and minute, pick a sound you like, and add a label to remember what it’s for.</li>\n            <li><strong>Test before you trust:</strong> Hit the “Test” button to make sure the alert and volume are just right.</li>\n            <li><strong>Personalize it:</strong> Change the look and feel—adjust the text color, style, and size. Your preferences are saved for next time.</li>\n            <li><strong>Works offline:</strong> The alarm will ring even if you lose your internet connection (just don’t close your browser or shut down your computer).</li>\n            <li><strong>Easy access:</strong> Bookmark your favorite alarm settings or share a link to set the alarm instantly next time.</li>\n          </ul>\n          <p>\n            When your alarm time arrives, you’ll get a clear notification and your chosen sound will play. If you want to change or delete an alarm, it’s just a click away. Your alarms and settings stay private—nothing is stored on our servers.\n          </p>\n          <p>\n            Try it out and never miss an important moment again!\n          </p>\n        </div>\n      </div>\n      )}\n    </>\n  );\n};\n\nexport default AlarmClock;"],"names":["AlarmClock","location","useLocation","currentTime","setCurrentTime","useState","Date","selectedTime","setSelectedTime","fontSize","setFontSize","isFullscreen","setIsFullscreen","showShare","setShowShare","shareRef","useRef","alarms","setAlarms","showAlarmModal","setShowAlarmModal","customTime","setCustomTime","alarmLabel","setAlarmLabel","activeAlarm","setActiveAlarm","alarmHour","setAlarmHour","alarmMinute","setAlarmMinute","alarmAMPM","setAlarmAMPM","alarmSound","setAlarmSound","alarmRepeat","setAlarmRepeat","audioError","setAudioError","isPlaying","setIsPlaying","alarmDays","setAlarmDays","audioRef","React","audioContextRef","useEffect","window","AudioContext","webkitAudioContext","current","resumeAudioContext","state","resume","addEventListener","once","removeEventListener","close","timer","setInterval","clearInterval","handleFullscreenChange","document","fullscreenElement","handleClick","e","contains","target","savedAlarms","localStorage","getItem","loaded","JSON","parse","map","a","__spreadProps","__spreadValues","days","setItem","stringify","interval","now","currentTimeString","toLocaleTimeString","hour12","hour","minute","today","getDay","forEach","alarm","isActive","time","includes","triggerAlarm","getAlarmTimeString","toString","padStart","formatCustomTime","timeInput","cleanInput","trim","toLowerCase","match1","match","parseInt","toUpperCase","match2","match3","playSound","sound","repeat","Notification","permission","body","label","icon","formatTime","date","full","second","ampm","split","replace","pause","src","audio","Audio","volume","muted","play","then","catch","message","err","handleTestSound","stopSound","jsxs","Fragment","children","Helmet","jsx","name","content","rel","href","pathname","property","className","onClick","style","background","X","h","m","value","onChange","file","fileName","c","title","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","points","type","id","checked","htmlFor","viewBox","placeholder","day","filter","d","timeToUse","formattedTime","alert","newAlarm","length","prev","disabled","Math","max","ZoomOut","min","ZoomIn","ref","s","Share2","boxShadow","encodeURIComponent","__async","exitFullscreen","clockElement","getElementById","requestFullscreen","error","Minimize2","Maximize2","round","innerWidth","fontWeight","color","letterSpacing","textAlign","marginLeft","verticalAlign","_a","textTransform","toLocaleDateString","weekday","year","month","requestPermission","toggleAlarm","join","deleteAlarm","index","marginBottom"],"mappings":"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"}